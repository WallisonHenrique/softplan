{"version":3,"sources":["components/Search/styles.js","components/Search/Search.js","components/List/styles.js","components/Card/styles.js","components/Card/Card.js","components/Message/styles.js","components/Message/Message.js","components/List/List.js","graphql/queries.js","components/Home/Home.js","components/Details/styles.js","components/Details/Details.js","components/Edit/styles.js","graphql/index.js","components/Form/styles.js","components/Form/Form.js","components/Edit/Edit.js","routes/Routes.js","App.js","index.js"],"names":["Form","styles","form","Input","input","Label","label","Search","search","useState","term","setTerm","data-testid","onSubmit","event","preventDefault","htmlFor","onChange","target","value","type","placeholder","id","Container","styled","div","article","Flag","img","Country","h2","Capital","p","Card","country","name","nameTranslations","flag","capital","_id","to","src","svgFile","alt","Message","children","List","loading","error","data","undefined","list","length","map","i","key","GETDATA","gql","LIST","DETAILS","Home","useLazyQuery","variables","getList","useEffect","Table","table","THead","th","Cell","td","Details","match","params","details","area","population","topLevelDomains","contriesItemsVar","makeVar","cache","InMemoryCache","typePolicies","Query","fields","read","_","filter","item","toLowerCase","indexOf","found","find","client","ApolloClient","uri","FormContainer","Group","Field","Btn","button","edit","useReducer","field","setFields","defaultAttrs","required","formModel","attrs","edited","Edit","history","getDetails","newLocalData","push","Routes","path","exact","component","render","routeProps","App","useQuery","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e631bb45.chunk.js","sourcesContent":["import styles from 'styled-components';\r\n\r\nexport const Form = styles.form`\r\n\tpadding: 20px 20px 10px;\r\n`;\r\n\r\nexport const Input = styles.input`\r\n\tborder: 1px solid #ddd;\r\n\tborder-radius: 2px;\r\n\tfont-size: 14px;\r\n\theight: 40px;\r\n\tpadding: 10px;\r\n\twidth: 100%;\r\n`;\r\n\r\nexport const Label = styles.label`\r\n\tborder: 0;\r\n\tclip: rect(0,0,0,0);\r\n\theight: 1px;\r\n\tmargin: -1px;\r\n\toverflow: hidden;\r\n\tpadding: 0;\r\n\tposition: absolute;\r\n\twidth: 1px;\r\n`;","import React, { useState } from 'react';\r\nimport { Form, Input, Label } from './styles';\r\n\r\nexport default function Search ({ search }) {\r\n\tconst [ term, setTerm ] = useState(\"\");\r\n\r\n\tconst handleChange = event => setTerm( event.target.value );\r\n\r\n\tconst submit = event => {\r\n\t\tevent.preventDefault();\r\n\t\tsearch(term);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form data-testid=\"search\" onSubmit={ submit }>\r\n\t\t\t<Label htmlFor=\"term\">Pesquisar por país</Label>\r\n\t\t\t<Input\r\n\t\t\t\tonChange={ handleChange } \r\n\t\t\t\ttype=\"text\" \r\n\t\t\t\tplaceholder=\"Pesquisar por país...\"\r\n\t\t\t\tvalue={ term }\r\n\t\t\t\tid=\"term\"\r\n\t\t\t/>\r\n\t\t</Form>\r\n\t);\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tpadding: 10px 15px 15px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.article`\r\n\tflex: 50%;\r\n\tpadding: 5px;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tflex: 100%;\r\n\t}\r\n\r\n\ta {\r\n\t\tbackground-color: #fcfcfc;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 2px;\r\n\t\tcolor: #000;\r\n\t\tdisplay: flex;\r\n\t\tpadding: 10px;\r\n\t\ttext-decoration: none;\r\n\t}\r\n`;\r\n\r\nexport const Flag = styled.img`\r\n\theight: 33px;\r\n\tmargin-right: 10px;\r\n\tvertical-align: middle;\r\n\twidth: 50px;\r\n`;\r\n\r\nexport const Country = styled.h2`\r\n\tfont-size: 16px;\r\n`;\r\n\r\nexport const Capital = styled.p`\r\n\tfont-size: 16px;\r\n`;","import React from 'react';\r\nimport { Container, Flag, Country, Capital } from './styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Card ({ country }) {\r\n\tconst name = country.nameTranslations[0].value;\r\n\tconst { flag, capital, _id } = country;\r\n\r\n\treturn (\r\n\t\t<Container data-testid=\"card\">\r\n\t\t\t<Link data-testid=\"link-details\" to={`/softplan/${ _id }`}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Flag src={ flag.svgFile } alt={` Bandeira ${ name } `} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Country>{ name }</Country>\r\n\t\t\t\t\t<Capital>{ capital }</Capital>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</Container>\t\r\n\t);\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.p`\r\n\tpadding: 20px;\r\n`;","import React from 'react';\r\nimport { Container } from './styles';\r\n\r\nexport default function Message ({ children }) {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{ children }\r\n\t\t</Container>\r\n\t);\r\n}","import React from 'react';\r\nimport { Container } from './styles';\r\nimport Card from '../Card/Card';\r\nimport Message from '../Message/Message';\r\n\r\nexport default function List ({ loading, error, data }) {\r\n\tif (loading) return <Message>Carregando...</Message>;\r\n  \tif (error) return <Message>Falha :(</Message>;\r\n  \tif (data === undefined) return <Message>Carregando...</Message>;\r\n  \tif (data.list.length === 0) return <Message>País não encontrado. Tente novamente.</Message>;\r\n  \r\n\treturn (\r\n\t\t<Container data-testid=\"list\">\r\n\t\t\t{\r\n\t\t\t\tdata.list.map(( country, i ) => \r\n\t\t\t\t\t<Card key={ i } country={ country } />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Container>\r\n\t);\r\n}","import { gql } from '@apollo/client';\r\n\r\nexport const GETDATA = gql`\r\n  query {\r\n    Country {\r\n       _id,\r\n      capital,\r\n      nameTranslations(filter: { languageCode_in: [\"pt\"]}) {\r\n        value\r\n      },\r\n      flag {\r\n        svgFile\r\n      },\r\n      area,\r\n      population,\r\n      topLevelDomains {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LIST = gql`\r\n  query {\r\n    list @client\r\n  }\r\n`;\r\n\r\nexport const DETAILS = gql`\r\n  query {\r\n    details\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport Search from '../Search/Search';\r\nimport List from '../List/List';\r\n\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { LIST } from '../../graphql/queries';\r\n\r\nexport default function Home () {\r\n\tconst [ getList, { error, loading, data }] = useLazyQuery( LIST, \r\n\t\t{ variables: { term: \"\" } }\r\n\t);\r\n\r\n\tuseEffect( () => { \r\n\t\tgetList();\r\n\t},[]);\r\n\r\n\tconst search = term => {\r\n\t\tgetList({ variables: { term: term } });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Search search={ search } />\r\n\t\t\t<List loading={ loading } error={ error } data={ data } />\r\n\t\t</>\t\r\n\t);\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.article`\r\n\tmargin: 0 auto;\r\n\tmax-width: 700px;\r\n\tpadding: 15px;\r\n`;\r\n\r\nexport const Flag = styled.div`\r\n\tmargin-bottom: 20px;\r\n\tmargin-top: 10px;\r\n\ttext-align: center;\r\n\r\n\timg {\r\n\t\tmax-width: 100%;\r\n\t\twidth: 400px;\r\n\t}\r\n`;\r\n\r\nexport const Country = styled.h2`\r\n\tfont-size: 22px;\r\n\tmargin-bottom: 10px;\r\n\ttext-transform: uppercase;\r\n`;\r\n\r\nexport const Table = styled.table`\r\n\tborder-spacing: initial;\r\n\tmargin-bottom: 10px;\r\n\ttext-align: left;\r\n\twidth: 100%;\r\n`;\r\n\r\nexport const THead = styled.th`\r\n\tborder-bottom: 1px solid #000;\r\n\tfont-weight: normal;\r\n\tpadding: 5px;\r\n`;\r\n\r\nexport const Cell = styled.td`\r\n\tborder-bottom: 1px solid #000;\r\n\tfont-weight: bold;\r\n\tpadding: 5px;\r\n`;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Container, Flag, Country, Table, THead, Cell } from './styles';\r\nimport Message from '../Message/Message';\r\n\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { DETAILS } from '../../graphql/queries';\r\n\r\nexport default function Details ({ match }) {\r\n\tconst [ getList, { error, loading, data }] = useLazyQuery( DETAILS,\r\n\t\t{ variables: { id: match.params.id } }\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetList();\r\n\t},[]);\r\n\t\r\n\tif (loading) return <Message>Carregando...</Message>;\r\n  \tif (error) return <Message>Falha :(</Message>;\r\n  \tif (data === undefined) return <Message>Carregando...</Message>;\r\n  \tif (data.details.length === 0) {\r\n  \t\treturn <Message>\r\n\t\t\tPaís não encontrado. Tente novamente. <br />\r\n\t\t\t<Link to=\"/softplan\">Voltar</Link>\r\n\t\t</Message>\r\n  \t}\r\n\r\n\tconst name = data.details.nameTranslations[0].value;\r\n\tconst { flag, capital, area, population, topLevelDomains } = data.details;\r\n\t\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Link to=\"/softplan\">Voltar</Link>\r\n\t\t\t<Flag>\r\n\t\t\t\t<img src={ flag.svgFile } alt={` Bandeira ${ name } `} />\r\n\t\t\t</Flag>\r\n\t\t\t<Country>{ name }</Country>\r\n\t\t\t<Table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<THead>Capital</THead>\r\n\t\t\t\t\t\t<Cell>{ capital }</Cell>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<THead>Área</THead>\r\n\t\t\t\t\t\t<Cell>{ area } km²</Cell>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<THead>População</THead>\r\n\t\t\t\t\t\t<Cell>{ population }</Cell>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<THead>Domínio de topo</THead>\r\n\t\t\t\t\t\t<Cell>{ topLevelDomains[0].name }</Cell>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t\t<Link to={`/softplan/editar/${match.params.id}`}>Editar</Link>\r\n\t\t</Container>\r\n\t);\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tmargin: 0 auto;\r\n\tmax-width: 700px;\r\n\tpadding: 15px;\r\n`;","import { ApolloClient, InMemoryCache, makeVar } from '@apollo/client';\r\n\r\nexport const contriesItemsVar = makeVar([]);\r\n\r\nexport const cache = new InMemoryCache({\r\n\ttypePolicies: {\r\n\t\tQuery: {\r\n\t\t\tfields: {\r\n\t\t\t\tlist: {\r\n\t\t\t\t\tread(_, { variables }) {\r\n\t\t\t\t\t\treturn contriesItemsVar().filter( item => {\r\n\t\t\t\t\t\t\tconst name = item.nameTranslations[0].value;\r\n\t\t\t\t\t\t\treturn name.toLowerCase().indexOf(variables.term.toLowerCase()) >= 0\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tdetails: {\r\n\t\t\t\t\tread(_, { variables }) {\r\n\t\t\t\t\t\tconst found = contriesItemsVar().find( item => item._id === variables.id );\r\n\t\t\t\t\t\tif (found)\r\n\t\t\t\t\t\t\treturn found;\r\n\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  uri: 'https://countries-274616.ew.r.appspot.com',\r\n  cache: cache\r\n});\r\n","import styled from 'styled-components';\r\n\r\nexport const FormContainer = styled.form`\r\n\tmargin: 0 auto;\r\n\tpadding: 15px;\r\n    max-width: 500px;\r\n`;\r\n\r\nexport const Group = styled.div`\r\n\tmargin-bottom: 15px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n\tdisplay: block;\r\n\tmargin-bottom: 5px;\r\n`;\r\n\r\nexport const Field = styled.input`\r\n\theight: 40px;\r\n    padding: 5px 10px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n\tbackground-color: #000;\r\n\tborder: none;\r\n\tborder-radius: 2px;\r\n\tcolor: #fff;\r\n\tcursor: pointer;\r\n\theight: 40px;\r\n    padding: 5px 10px;\r\n    width: 100%;\r\n`;","import React, { useReducer } from 'react';\r\nimport { FormContainer, Group, Label, Field, Btn } from './styles';\r\n\r\nexport default function Form ({ country, edit }) {\r\n\tconst name = country.nameTranslations[0].value;\r\n\tconst { flag, capital, area, population, topLevelDomains } = country;\r\n\r\n\tconst [ fields, setFields ] = useReducer(( fields, field ) => ({ ...fields, ...field }),\r\n\t\t{ flag: flag.svgFile, name, capital, area, population, topLevelDomains: topLevelDomains[0].name }\r\n\t);\r\n\r\n\tconst change = event => setFields({[ event.target.name ]: event.target.value });\r\n\r\n\tconst submit = event => {\r\n\t\tconst edited = {\r\n\t\t\t...country,\r\n\t\t\tnameTranslations: [{ ...country.nameTranslations[0], value: fields.name }], \r\n\t\t\tflag: { ...flag, svgFile: fields.flag },\r\n\t\t\ttopLevelDomains: [{ ...topLevelDomains[0], name: fields.topLevelDomains }],\r\n\t\t\tcapital: fields.capital,\r\n\t\t\tarea: fields.area,\r\n\t\t\tpopulation: fields.population\r\n\t\t};\r\n\t\tedit( edited );\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\tconst defaultAttrs = { onChange: change, required: true };\r\n\tconst formModel = [\r\n\t\t{ label: \"Bandeira\", attrs: { name: \"flag\", type: \"text\", value: fields.flag } },\r\n\t\t{ label: \"Nome\", attrs: { name: \"name\", type: \"text\", value: fields.name } },\r\n\t\t{ label: \"Capital\", attrs: { name: \"capital\", type: \"text\", value: fields.capital } },\r\n\t\t{ label: \"Área km²\", attrs: { name: \"area\", type: \"number\", value: fields.area } },\r\n\t\t{ label: \"População\", attrs: { name: \"population\", type: \"number\", value: fields.population } },\r\n\t\t{ label: \"Domínio de topo\", attrs: { name: \"topLevelDomains\", type: \"text\", value: fields.topLevelDomains } }\r\n\t];\r\n\r\n\treturn (\r\n\t\t<FormContainer data-testid=\"edit\" onSubmit={ submit }>\r\n\t\t\t{\r\n\t\t\t\tformModel.map(( item, i ) => \r\n\t\t\t\t\t<Group key={i}>\r\n\t\t\t\t\t\t<Label htmlFor={item.attrs.name}>{ item.label }:</Label>\r\n\t\t\t\t\t\t<Field data-testid={`edit-input-${item.attrs.name}`} id={item.attrs.name} { ...item.attrs } { ...defaultAttrs } />\r\n\t\t\t\t\t</Group>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t<Btn>Salvar</Btn>\r\n\t\t</FormContainer>\r\n\t);\r\n}","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container } from './styles';\r\n\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { DETAILS } from '../../graphql/queries';\r\nimport { contriesItemsVar } from '../../graphql/index';\r\n\r\nimport Message from '../Message/Message';\r\nimport Form from '../Form/Form';\r\n\r\nexport default function Edit ({ match, history }) {\r\n\tconst [ getDetails, { error, loading, data }] = useLazyQuery( DETAILS, \r\n\t\t{ variables: { id: match.params.id } }\r\n\t);\r\n\r\n\tuseEffect( () => {\r\n\t\tgetDetails();\r\n\t},[]);\r\n\t\r\n\tif (loading) return <Message>Carregando...</Message>;\r\n  \tif (error) return <Message>Falha :(</Message>;\r\n  \tif (data === undefined) return <Message>Carregando...</Message>;\r\n  \tif (data.details.length === 0) {\r\n  \t\treturn <Message>\r\n\t\t\tPaís não encontrado. Tente novamente. <br />\r\n\t\t\t<Link to=\"/softplan\">Voltar</Link>\r\n\t\t</Message>\r\n  \t}\r\n\r\n  \tconst edit = edited => {\r\n  \t\tconst newLocalData = contriesItemsVar().map( item => {\r\n  \t\t\tif ( item._id === edited._id )\r\n  \t\t\t\treturn edited;\r\n  \t\t\treturn item;\r\n  \t\t});\r\n\r\n  \t\tcontriesItemsVar([ ...newLocalData ]);\r\n\r\n  \t\thistory.push(\"/softplan\");\r\n  \t};\r\n\t\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Link to=\"/softplan\">Voltar</Link>\r\n\t\t\t<Form country={ data.details } edit={ edit } />\r\n\t\t</Container>\r\n\t);\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Home from '../components/Home/Home';\r\nimport Details from '../components/Details/Details';\r\nimport Edit from '../components/Edit/Edit';\r\n\r\nexport default function Routes () {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/softplan\" exact={true} component={ Home } />\r\n\t\t\t\t<Route path=\"/softplan/:id\" exact={true} render={ ({ match }) => <Details match={ match } />} />\r\n\t\t\t\t<Route path=\"/softplan/editar/:id\" render={ routeProps => <Edit { ...routeProps } />} />\r\n\t\t\t\t<Redirect to=\"/softplan\" />\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}","import React from 'react';\nimport Routes from './routes/Routes';\nimport Message from './components/Message/Message';\n\nimport { useQuery } from '@apollo/client';\nimport { GETDATA } from './graphql/queries';\nimport { contriesItemsVar } from './graphql';\n\nexport default function App() {\n\tconst { loading, error, data } = useQuery( GETDATA);\n\n\tif (loading) return <Message>Carregando...</Message>;\n  \tif (error) return <Message>Falha :(</Message>;\n\n  \tcontriesItemsVar(data.Country);\n\treturn (\n\t\t<>\n\t\t\t<Routes />\n\t\t</>\n\t);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nimport { ApolloProvider } from '@apollo/client';\nimport { client } from './graphql/index';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ApolloProvider client={ client }>\n\t\t\t<App />\t\n\t\t</ApolloProvider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Search/styles.js","components/Search/Search.js","components/List/styles.js","components/Card/styles.js","components/Card/Card.js","components/Message/styles.js","components/Message/Message.js","components/List/List.js","graphql/queries.js","components/Home/Home.js","components/Details/styles.js","components/Details/Details.js","components/Form/styles.js","components/Form/Form.js","graphql/index.js","components/Edit/Edit.js","routes/Routes.js","App.js","index.js"],"names":["Form","styles","form","Input","input","Label","label","Search","search","useState","term","setTerm","onSubmit","event","preventDefault","onChange","target","value","type","placeholder","Container","styled","div","article","Flag","img","Country","h2","Capital","p","Card","country","name","nameTranslations","flag","capital","_id","to","src","svgFile","alt","Message","children","List","loading","error","data","Countries","length","map","i","key","COUNTRIES","gql","LIST","DETAILS","Home","vars","useQuery","variables","refetch","Table","table","THead","th","Cell","td","Details","match","id","params","area","population","topLevelDomains","Group","Field","Btn","button","edit","useReducer","fields","field","setFields","change","edited","required","contriesItemsVar","makeVar","cache","InMemoryCache","typePolicies","Query","read","_","filter","indexOf","find","client","ApolloClient","uri","Edit","history","newList","item","push","Routes","path","exact","component","render","routeProps","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de405850.chunk.js","sourcesContent":["import styles from 'styled-components';\r\n\r\nexport const Form = styles.form`\r\n\tpadding: 10px;\r\n`;\r\n\r\nexport const Input = styles.input`\r\n\tborder: 1px solid #ddd;\r\n\tborder-radius: 2px;\r\n\tfont-size: 14px;\r\n\theight: 36px;\r\n\tpadding: 10px;\r\n\twidth: 100%;\r\n`;\r\n\r\nexport const Label = styles.label`\r\n\tborder: 0;\r\n\tclip: rect(0,0,0,0);\r\n\theight: 1px;\r\n\tmargin: -1px;\r\n\toverflow: hidden;\r\n\tpadding: 0;\r\n\tposition: absolute;\r\n\twidth: 1px;\r\n`;","import React, { useState } from 'react';\r\nimport { Form, Input, Label } from './styles';\r\n\r\nexport default function Search ({ search }) {\r\n\tconst [ term, setTerm ] = useState(\"\");\r\n\r\n\tconst handleChange = event => setTerm( event.target.value );\r\n\r\n\tconst submit = event => {\r\n\t\tevent.preventDefault();\r\n\t\tsearch(term);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={ submit }>\r\n\t\t\t<Label>Pesquisar por país</Label>\r\n\t\t\t<Input onChange={ handleChange } type=\"text\" placeholder=\"Pesquisar por país...\" value={ term } />\r\n\t\t</Form>\r\n\t);\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tpadding: 15px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.article`\r\n\tflex: 50%;\r\n\tpadding: 5px;\r\n\r\n\t@media (max-width: 767px) {\r\n\t\tflex: 100%;\r\n\t}\r\n\r\n\ta {\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 2px;\r\n\t\tcolor: #000;\r\n\t\tdisplay: flex;\r\n\t\tpadding: 10px;\r\n\t\ttext-decoration: none;\r\n\t}\r\n`;\r\n\r\nexport const Flag = styled.img`\r\n\tmargin-right: 10px;\r\n\tvertical-align: middle;\r\n\twidth: 50px;\r\n`;\r\n\r\nexport const Country = styled.h2`\r\n\tfont-size: 16px;\r\n`;\r\n\r\nexport const Capital = styled.p`\r\n\tfont-size: 16px;\r\n`;","import React from 'react';\r\nimport { Container, Flag, Country, Capital } from './styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Card ({ country }) {\r\n\tconst name = country.nameTranslations[0].value;\r\n\tconst { flag, capital, _id } = country;\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Link to={`/softplan/${ _id }`}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Flag src={ flag.svgFile } alt={` Bandeira ${ name } `} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Country>{ name }</Country>\r\n\t\t\t\t\t<Capital>{ capital }</Capital>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t</Container>\t\r\n\t);\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.p`\r\n\tpadding: 15px;\r\n`;","import React from 'react';\r\nimport { Container } from './styles';\r\n\r\nexport default function Message ({ children }) {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{ children }\r\n\t\t</Container>\r\n\t);\r\n}","import React from 'react';\r\nimport { Container } from './styles';\r\nimport Card from '../Card/Card';\r\nimport Message from '../Message/Message';\r\n\r\nexport default function List ({ loading, error, data }) {\r\n\tif (loading) return <Message>Carregando...</Message>;\r\n  \tif (error) return <Message>Falha :(</Message>;\r\n  \tif (data.Countries.length === 0) return <Message>Não foi encontrado nenhum país. Tente novamente.</Message>;\r\n  \r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{\r\n\t\t\t\tdata.Countries.map(( country, i ) => \r\n\t\t\t\t\t<Card key={ i } country={ country } />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Container>\r\n\t);\r\n}","import { gql } from '@apollo/client';\r\n\r\nexport const COUNTRIES = gql`\r\n  query {\r\n    Country {\r\n      _id,\r\n      capital,\r\n      nameTranslations(filter: { languageCode_in: [\"pt\"]}) {\r\n        value\r\n      },\r\n      flag {\r\n        svgFile\r\n      },\r\n      area,\r\n      population,\r\n      topLevelDomains {\r\n        name\r\n      }\r\n    } \r\n  }\r\n`;\r\n\r\nexport const LIST = gql`\r\n  query {\r\n    Countries @client\r\n  }\r\n`;\r\n\r\nexport const DETAILS = gql`\r\n  query {\r\n    Details @client\r\n  }\r\n`;\r\n\r\n","import React from 'react';\r\nimport Search from '../Search/Search';\r\nimport List from '../List/List';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { LIST } from '../../graphql/queries';\r\n\r\nexport default function Home () {\r\n\tconst vars = { term: \"\" };\r\n\r\n\tconst { loading, error, data, refetch } = useQuery(LIST, {\r\n\t\tvariables: vars\r\n\t});\r\n\r\n\tconst search = term => {\r\n\t\tvars.term = term;\r\n\t\trefetch(vars);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Search search={ search } />\r\n\t\t\t<List loading={ loading } error={ error } data={ data } />\r\n\t\t</>\t\r\n\t);\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.article`\r\n\tmargin: 0 auto;\r\n\tmax-width: 700px;\r\n\tpadding: 15px;\r\n`;\r\n\r\nexport const Flag = styled.div`\r\n\tmargin-bottom: 20px;\r\n\tmargin-top: 10px;\r\n\ttext-align: center;\r\n\r\n\timg {\r\n\t\tmax-width: 100%;\r\n\t\twidth: 400px;\r\n\t}\r\n`;\r\n\r\nexport const Country = styled.h2`\r\n\tfont-size: 22px;\r\n\tmargin-bottom: 10px;\r\n\ttext-transform: uppercase;\r\n`;\r\n\r\nexport const Table = styled.table`\r\n\tborder-spacing: initial;\r\n\tmargin-bottom: 10px;\r\n\ttext-align: left;\r\n\twidth: 100%;\r\n`;\r\n\r\nexport const THead = styled.th`\r\n\tborder-bottom: 1px solid #000;\r\n\tfont-weight: normal;\r\n\tpadding: 5px;\r\n`;\r\n\r\nexport const Cell = styled.td`\r\n\tborder-bottom: 1px solid #000;\r\n\tfont-weight: bold;\r\n\tpadding: 5px;\r\n`;","import React from 'react';\r\nimport { Container, Flag, Country, Table, THead, Cell } from './styles';\r\nimport { useQuery } from '@apollo/client';\r\nimport { DETAILS } from '../../graphql/queries';\r\nimport Message from '../Message/Message';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Details ({ match }) {\r\n\tconst { loading, error, data } = useQuery(DETAILS, {\r\n\t\tvariables: { id: match.params.id }\r\n\t});\r\n\t\r\n\tif (loading) return <Message>Carregando...</Message>;\r\n  \tif (error) return <Message>Falha :(</Message>;\r\n  \tif (data.Details.length === 0) {\r\n  \t\treturn <Message>\r\n\t\t\tNão foi encontrado. Tende novamente. <br />\r\n\t\t\t<Link to=\"/softplan\">Voltar</Link>\r\n\t\t</Message>\r\n  \t}\r\n\r\n  \tconst country = data.Details;\r\n\tconst name = country.nameTranslations[0].value;\r\n\tconst { flag, capital, area, population, topLevelDomains } = country;\r\n\t\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Link to=\"/softplan\">Voltar</Link>\r\n\t\t\t<Flag>\r\n\t\t\t\t<img src={ flag.svgFile } alt={` Bandeira ${ name } `} />\r\n\t\t\t</Flag>\r\n\t\t\t<Country>{ name }</Country>\r\n\t\t\t<Table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<THead>Capital</THead>\r\n\t\t\t\t\t\t<Cell>{ capital }</Cell>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<THead>Área</THead>\r\n\t\t\t\t\t\t<Cell>{ area }</Cell>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<THead>População</THead>\r\n\t\t\t\t\t\t<Cell>{ population }</Cell>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<THead>Domínio de topo</THead>\r\n\t\t\t\t\t\t<Cell>{ topLevelDomains[0].name }</Cell>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t\t<Link to={`/softplan/editar/${match.params.id}`}>Editar</Link>\r\n\t\t</Container>\r\n\t);\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.form`\r\n\tmargin: 0 auto;\r\n\tpadding: 15px;\r\n    max-width: 500px;\r\n`;\r\n\r\nexport const Group = styled.div`\r\n\tmargin-bottom: 15px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n\tdisplay: block;\r\n\tmargin-bottom: 5px;\r\n`;\r\n\r\nexport const Field = styled.input`\r\n\theight: 40px;\r\n    padding: 5px 10px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n\tbackground-color: #000;\r\n\tborder: none;\r\n\tborder-radius: 2px;\r\n\tcolor: #fff;\r\n\tcursor: pointer;\r\n\theight: 40px;\r\n    padding: 5px 10px;\r\n    width: 100%;\r\n`;","import React, { useReducer } from 'react';\r\nimport { Container, Group, Label, Field, Btn } from './styles';\r\n\r\nexport default function Form ({ country, edit }) {\r\n\tconst name = country.nameTranslations[0].value;\r\n\tconst { flag, capital, area, population, topLevelDomains } = country;\r\n\r\n\tconst [ fields, setFields ] = useReducer(( fields, field ) => ({ ...fields, ...field }),\r\n\t\t{ flag: flag.svgFile, name, capital, area, population, topLevelDomains: topLevelDomains[0].name }\r\n\t);\r\n\r\n\tconst change = event => setFields({[ event.target.name ]: event.target.value });\r\n\r\n\tconst submit = event => {\r\n\t\tconst edited = {\r\n\t\t\t...country,\r\n\t\t\tnameTranslations: [{ ...country.nameTranslations[0], value: fields.name }], \r\n\t\t\tflag: { ...flag, svgFile: fields.flag },\r\n\t\t\ttopLevelDomains: [{ ...topLevelDomains[0], name: fields.topLevelDomains }],\r\n\t\t\tcapital: fields.capital,\r\n\t\t\tarea: fields.area,\r\n\t\t\tpopulation: fields.population\r\n\t\t};\r\n\r\n\t\tevent.preventDefault();\r\n\t\tedit( edited );\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container onSubmit={ submit }>\r\n\t\t\t<Group>\r\n\t\t\t\t<Label>Bandeira:</Label>\r\n\t\t\t\t<Field onChange={ change } value={ fields.flag } name=\"flag\" type=\"text\" required />\r\n\t\t\t</Group>\r\n\t\t\t<Group>\r\n\t\t\t\t<Label>Nome:</Label>\r\n\t\t\t\t<Field onChange={ change } value={ fields.name } name=\"name\" type=\"text\" required />\r\n\t\t\t</Group>\r\n\t\t\t<Group>\r\n\t\t\t\t<Label>Capital:</Label>\r\n\t\t\t\t<Field onChange={ change } value={ fields.capital } name=\"capital\" type=\"text\" required />\r\n\t\t\t</Group>\r\n\t\t\t<Group>\r\n\t\t\t\t<Label>Área:</Label>\r\n\t\t\t\t<Field onChange={ change } value={ fields.area } name=\"area\" type=\"number\" required />\r\n\t\t\t</Group>\r\n\t\t\t<Group>\r\n\t\t\t\t<Label>População:</Label>\r\n\t\t\t\t<Field onChange={ change } value={ fields.population } name=\"population\" type=\"number\" required />\r\n\t\t\t</Group>\r\n\t\t\t<Group>\r\n\t\t\t\t<Label>Domínio de topo:</Label>\r\n\t\t\t\t<Field onChange={ change } value={ fields.topLevelDomains } name=\"topLevelDomains\" type=\"text\" required />\r\n\t\t\t</Group>\r\n\t\t\t<Btn>Salvar</Btn>\r\n\t\t</Container>\r\n\t);\r\n}","import { ApolloClient, InMemoryCache, makeVar } from '@apollo/client';\r\n\r\nexport const contriesItemsVar = makeVar([]);\r\n\r\nconst cache = new InMemoryCache({\r\n  typePolicies: {\r\n    Query: {\r\n      fields: {\r\n        Countries: {\r\n          read(_, { variables }) {\r\n            const { term } = variables;\r\n            return contriesItemsVar().filter(( country ) => country.nameTranslations[0].value.indexOf(term) >= 0 );\r\n          }\r\n        },\r\n        Details: {\r\n          read(_, { variables }) {\r\n            return contriesItemsVar().find(( country ) => country._id === variables.id );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const client = new ApolloClient({\r\n  uri: 'https://countries-274616.ew.r.appspot.com',\r\n  cache: cache\r\n});","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport Message from '../Message/Message';\r\nimport Form from '../Form/Form';\r\n\r\nimport { DETAILS } from '../../graphql/queries';\r\nimport { contriesItemsVar } from '../../graphql/index';\r\n\r\nexport default function Edit ({ match, history }) {\r\n\tconst { loading, error, data } = useQuery(DETAILS, {\r\n\t\tvariables: { id: match.params.id }\r\n\t});\r\n\t\r\n\tif (loading) return <Message>Carregando...</Message>;\r\n  \tif (error) return <Message>Falha :(</Message>;\r\n  \tif (data.Details.length === 0) {\r\n  \t\treturn <Message>\r\n\t\t\tNão foi encontrado. Tende novamente. <br />\r\n\t\t\t<Link to=\"/softplan\">Voltar</Link>\r\n\t\t</Message>\r\n  \t}\r\n\r\n  \tconst edit = edited => {\r\n  \t\tconst newList = contriesItemsVar().map( item => {\r\n  \t\t\tif ( item._id === edited._id )\r\n  \t\t\t\treturn edited;\r\n  \t\t\treturn item; \r\n  \t\t});\r\n\r\n  \t\tcontriesItemsVar([ ...newList ]);\r\n  \t\thistory.push(\"/softplan\");\r\n  \t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Link to=\"/softplan\">Voltar</Link>\r\n\t\t\t<Form country={ data.Details } edit={ edit } />\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Home from '../components/Home/Home';\r\nimport Details from '../components/Details/Details';\r\nimport Edit from '../components/Edit/Edit';\r\n\r\nexport default function Routes () {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/softplan\" exact={true} component={ Home } />\r\n\t\t\t\t<Route path=\"/softplan/:id\" exact={true} render={ ({ match }) => <Details match={ match } />} />\r\n\t\t\t\t<Route path=\"/softplan/editar/:id\" render={ routeProps => <Edit { ...routeProps } />} />\r\n\t\t\t\t<Redirect to=\"/softplan\" />\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}","import React from 'react';\nimport Routes from './routes/Routes';\n\nimport { useQuery } from '@apollo/client';\nimport { COUNTRIES } from './graphql/queries';\nimport { contriesItemsVar } from './graphql';\n\nfunction App() {\n\tconst { loading, error, data } = useQuery(COUNTRIES);\n\t\n\tif (loading) return <p>Carregando...</p>;\n  \tif (error) return <p>Falha :(</p>;\n  \t\n\tcontriesItemsVar(data.Country);\n\n\treturn (\n\t\t<Routes />\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nimport { ApolloProvider } from '@apollo/client';\nimport { client } from './graphql/index';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ApolloProvider client={ client }>\n\t\t\t<App />\t\n\t\t</ApolloProvider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}